Description: Add Ubuntu id into search queries to get credit.
Author: Chad Miller <chad.miller@canonical.com>

--- a/components/search_engines/prepopulated_engines.json
+++ b/components/search_engines/prepopulated_engines.json
@@ -79,7 +79,7 @@
       "name": "\u767e\u5ea6",
       "keyword": "baidu.com",
       "favicon_url": "http://www.baidu.com/favicon.ico",
-      "search_url": "http://www.baidu.com/#ie={inputEncoding}&wd={searchTerms}",
+      "search_url": "http://www.baidu.com/#ie={inputEncoding}&tn=ubuntuu_cb&wd={searchTerms}",
       "type": "SEARCH_ENGINE_BAIDU",
       "id": 21
     },
@@ -529,7 +529,7 @@
       "keyword": "google.com",
       "favicon_url": "http://www.google.com/favicon.ico",
       "search_url": "{google:baseURL}search?q={searchTerms}&{google:RLZ}{google:originalQueryForSuggestion}{google:assistedQueryStats}{google:searchFieldtrialParameter}{google:bookmarkBarPinned}{google:searchClient}{google:sourceId}{google:instantExtendedEnabledParameter}{google:omniboxStartMarginParameter}{google:contextualSearchVersion}ie={inputEncoding}",
-      "suggest_url": "{google:baseSuggestURL}search?{google:searchFieldtrialParameter}client={google:suggestClient}&gs_ri={google:suggestRid}&xssi=t&q={searchTerms}&{google:inputType}{google:cursorPosition}{google:currentPageUrl}{google:pageClassification}{google:searchVersion}{google:sessionToken}{google:prefetchQuery}sugkey={google:suggestAPIKeyParameter}",
+      "suggest_url": "{google:baseSuggestURL}search?{google:searchFieldtrialParameter}{google:searchClient}&gs_ri={google:suggestRid}&xssi=t&q={searchTerms}&{google:inputType}{google:cursorPosition}{google:currentPageUrl}{google:pageClassification}{google:searchVersion}{google:sessionToken}{google:prefetchQuery}sugkey={google:suggestAPIKeyParameter}",
       "instant_url": "{google:baseURL}webhp?sourceid=chrome-instant&{google:RLZ}{google:forceInstantResults}{google:instantExtendedEnabledParameter}{google:ntpIsThemedParameter}{google:omniboxStartMarginParameter}ie={inputEncoding}",
       "image_url": "{google:baseURL}searchbyimage/upload",
       "new_tab_url": "{google:baseURL}_/chrome/newtab?{google:RLZ}{google:instantExtendedEnabledParameter}{google:ntpIsThemedParameter}ie={inputEncoding}",
--- a/components/search_engines/template_url.cc
+++ b/components/search_engines/template_url.cc
@@ -834,6 +834,9 @@ std::string TemplateURLRef::HandleReplac
 
   std::string url = parsed_url_;
 
+  bool is_google_search = false;
+  bool ubuntu_credit_for_search = false;
+
   // replacements_ is ordered in ascending order, as such we need to iterate
   // from the back.
   for (Replacements::reverse_iterator i = replacements_.rbegin();
@@ -863,12 +866,14 @@ std::string TemplateURLRef::HandleReplac
 
       case GOOGLE_BASE_URL:
         DCHECK(!i->is_post_param);
+	is_google_search = true;
         HandleReplacement(
             std::string(), search_terms_data.GoogleBaseURLValue(), *i, &url);
         break;
 
       case GOOGLE_BASE_SUGGEST_URL:
         DCHECK(!i->is_post_param);
+	is_google_search = true;
         HandleReplacement(
             std::string(), search_terms_data.GoogleBaseSuggestURLValue(), *i,
             &url);
@@ -1038,7 +1043,8 @@ std::string TemplateURLRef::HandleReplac
 
       case GOOGLE_SEARCH_CLIENT: {
         DCHECK(!i->is_post_param);
-        std::string client = search_terms_data.GetSearchClient();
+  	ubuntu_credit_for_search = true;
+        std::string client = "ubuntu";
         if (!client.empty())
           HandleReplacement("client", client, *i, &url);
         break;
@@ -1135,6 +1141,10 @@ std::string TemplateURLRef::HandleReplac
     }
   }
 
+  if (is_google_search && !ubuntu_credit_for_search) {
+    url.append("&client=ubuntu");
+  }
+
   if (!post_params_.empty())
     EncodeFormData(post_params_, post_content);
 
