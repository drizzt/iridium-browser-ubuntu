Description: Log hardware reporting of screen size.
Author: Chad MILLER <chad.miller@canonical.com>
Forwarded: not-needed

--- a/ui/views/widget/desktop_aura/desktop_screen_x11.cc
+++ b/ui/views/widget/desktop_aura/desktop_screen_x11.cc
@@ -348,12 +348,15 @@ std::vector<gfx::Display> DesktopScreenX
       if (density_indicator != 0) {
         // n/8 is actual scaling factor.  Zero means discover from hardware.
         device_scale_factor = float(density_indicator / 8.0);
-        DVLOG(1) << "Set " << output_info->name << " screen scaling to "
+        VLOG(1) << "Set " << output_info->name << " screen scaling to "
                  << device_scale_factor << " from gsettings.";
         display.SetScaleAndBounds(device_scale_factor, crtc_bounds);
       } else if (!gfx::Display::HasForceDeviceScaleFactor()) {
         if (i == 0 && !ui::IsDisplaySizeBlackListed(
             gfx::Size(output_info->mm_width, output_info->mm_height))) {
+          VLOG(1) << "ouput display " << output_info->name << 
+                     " claims size width=" << output_info->mm_width <<
+                     "mm and height=" << output_info->mm_height;
           // As per display scale factor is not supported right now,
           // the primary display's scale factor is always used.
           device_scale_factor = GetDeviceScaleFactor(crtc->width,
